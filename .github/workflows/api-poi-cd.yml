# This is a basic workflow to help you get started with Actions
# help from https://gist.github.com/hattan/8b9d5aa45f77c8bfab78cb7ea07c8080

name: api-poi-cd

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
    paths: 'apis/poi/**'
  workflow_dispatch: 
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
  # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build and push Docker images
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: devopsoh/api-poi
        registry: openhackt7t44282acr.azurecr.io
        tags: ${{ github.sha }} 
        path: apis/poi/web/
        
    
    - name: ACR authentication
      uses: azure/docker-login@v1
      with:
        login-server: openhackt7t44282acr.azurecr.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Login via Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
        
    - uses: azure/webapps-deploy@v2
      with:
        app-name: 'openhackt7t44282poi'
        slot-name: staging
        images: 'openhackt7t44282acr.azurecr.io/devopsoh/api-poi:${{ github.sha }}'
        key:  
  test_statging:
    runs-on: ubuntu-layest
    needs: [build]
    steps:
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}  
          
       
  swap_prod_env:
    runs-on: ubuntu-latest
    needs: [test_statging]
    steps: 
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}    
        
      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az webapp deployment slot swap --slot staging -g openhackt7t44282rg --name openhackt7t44282poi
        
